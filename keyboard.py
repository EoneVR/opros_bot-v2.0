from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from language import langs


def choose_lang_button():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    russian = KeyboardButton(text='üá∑üá∫ –†—É—Å—Å–∫–∏–π')
    uzbek = KeyboardButton(text='üá∫üáø Ozbek')
    markup.row(russian, uzbek)
    return markup


def generate_contact_button(lang):
    return ReplyKeyboardMarkup([
        [KeyboardButton(text=langs[lang]['contact'], request_contact=True)]
    ], resize_keyboard=True)


def generate_options_button(options):
    markup = InlineKeyboardMarkup(row_width=1)
    for option in options:
        markup.add(InlineKeyboardButton(option, callback_data=option))
    return markup


def generate_type_button(lang):
    markup = InlineKeyboardMarkup(row_width=2)
    if lang == 'ru':
        markup.row(
            InlineKeyboardButton(text='–° –æ–ø—Ü–∏—è–º–∏', callback_data='option'),
            InlineKeyboardButton(text='–í –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞', callback_data='text'),
        )
    else:
        markup.row(
            InlineKeyboardButton(text="To'xtatish", callback_data='option'),
            InlineKeyboardButton(text='Qayta ishga tushirish', callback_data='text'),
        )
    return markup


def generate_stop_and_reboot_button(lang):
    markup = InlineKeyboardMarkup()
    if lang == 'ru':
        markup.add(
            InlineKeyboardButton(text='‚õî–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å‚õî', callback_data='stop')
        )
        markup.add(
            InlineKeyboardButton(text='‚ôª–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å‚ôª', callback_data='reboot')
        )
    else:
        markup.add(
            InlineKeyboardButton(text="‚õîTo'xtatish‚õî", callback_data='stop')
        )
        markup.add(
            InlineKeyboardButton(text='‚ôªQayta ishga tushirish‚ôª', callback_data='reboot')
        )
    return markup


def generate_poll_manager_buttons(active_polls):
    markup = InlineKeyboardMarkup()
    for poll_id, poll_question in active_polls.items():
        button = InlineKeyboardButton(text=poll_question, callback_data=f'manage_{poll_id}')
        markup.add(button)
    return markup


def generate_poll_buttons(active_polls):
    markup = InlineKeyboardMarkup()
    for poll_id, poll_question in active_polls.items():
        button = InlineKeyboardButton(text=poll_question, callback_data=f'participate_{poll_id}')
        markup.add(button)
    return markup


def generate_active_polls_button(options, lang):
    markup = InlineKeyboardMarkup()
    for option in options:
        button = InlineKeyboardButton(text=option, callback_data=f'vote_{option}')
        markup.add(button)
    back_button = InlineKeyboardButton(text=langs[lang]['back'], callback_data='back_to_polls')
    markup.add(back_button)
    return markup
